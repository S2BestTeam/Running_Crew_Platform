<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.korit.running_back_s2.domain.user.UserMapper">

    <resultMap id="UserMap" type="User" >
        <id property="userId"               column="user_id" />
        <result property="oauthType"        column="oauth_type" />
        <result property="providerId"       column="provider_id" />
        <result property="email"            column="email" />
        <result property="picture"          column="picture" />
        <result property="fullName"         column="full_name" />
        <result property="nickname"         column="nickname" />
        <result property="phoneNumber"      column="phone_number" />
        <result property="gunguId"          column="gungu_id" />
        <result property="address"          column="address" />
        <result property="birthDate"        column="birth_date" />
        <result property="gender"           column="gender" />
        <result property="totalKm"          column="total_km" />
    </resultMap>

    <update id="updateProfileImgById">
        update user_tb
        set picture = #{picture}
        where user_id = #{userId}
    </update>

    <update id="updateUser">
        update user_tb
        set
            nickname = #{nickname},
            phone_number = #{phoneNumber}
        where
            user_id = #{userId}
    </update>

    <select id="findByEmail" resultMap="UserMap">
        select
            user_id,
            oauth_type,
            provider_id,
            email,
            convert_url('${serverHost}', '/image/profile/', picture) as picture,
            full_name,
            nickname,
            phone_number,
            gungu_id,
            address,
            birth_date,
            gender,
            total_km
        from
            user_tb
        where
            email = #{email}
    </select>

    <select id="findByNickname" resultMap="UserMap">
        select
            user_id,
            oauth_type,
            provider_id,
            email,
            convert_url('${serverHost}', '/image/profile/', picture) as picture,
            full_name,
            nickname,
            phone_number,
            gungu_id,
            address,
            birth_date,
            gender,
            total_km
        from
            user_tb
        where
            nickname = #{nickname}
    </select>

    <select id="findById" resultMap="UserMap">
        SELECT
            user_id,
            oauth_type,
            provider_id,
            email,
            convert_url('${serverHost}', '/image/profile/', picture) as picture,
            full_name,
            nickname,
            phone_number,
            gungu_id,
            address,
            birth_date,
            gender,
            total_km
        from
            user_tb
        where
            user_id = #{userId}
    </select>

    <select id="findWelcomeByUserId" resultType="com.korit.running_back_s2.dto.welcome.WelcomeByUserIdResDto">
        select
            cwt.crew_id as crewId,
            ct.crew_name as crewName,
            ct.profile_picture as profilePicture,
            case
                when cmt.crew_member_id is null then '대기중'
                else '승인 완료'
            end as status
        from
            welcome_tb cwt
            join crew_tb ct on (cwt.crew_id = ct.crew_id)
            left outer join member_tb cmt on (cwt.crew_id = cmt.crew_id and cwt.user_id = cmt.user_id)
        where cwt.user_id = #{userId}
    </select>



    <insert id="insert" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO user_tb
        (oauth_type, provider_id, email, picture, full_name, nickname, phone_number, gungu_id, address, birth_date, gender, total_km  )
        VALUES (#{oauthType}, #{providerId}, #{email}, #{picture}, #{fullName}, #{nickname}, #{phoneNumber}, #{gunguId}, #{address}, #{birthDate}, #{gender}, #{totalKM} )
    </insert>
</mapper>
