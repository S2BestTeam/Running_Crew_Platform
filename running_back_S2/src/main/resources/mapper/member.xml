<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.korit.running_back_s2.domain.member.MemberMapper">

    <resultMap id="MemberMap" type="com.korit.running_back_s2.domain.member.Member">
        <id     property="memberId"                 column="member_id"/>
        <result property="userId"                   column="cm_user_id"/>
        <result property="roleId"                   column="role_id"/>
        <association property="user" resultMap="UserMap" />
    </resultMap>

    <resultMap id="UserMap" type="User" >
        <id property="userId" column="user_id" />
        <result property="oauthType"                column="oauth_type" />
        <result property="providerId"               column="provider_id" />
        <result property="email"                    column="email" />
        <result property="picture"                  column="picture" />
        <result property="fullName"                 column="full_name" />
        <result property="nickname"                 column="nickname" />
        <result property="phoneNumber"              column="phone_number" />
        <result property="gunguId"                  column="gungu_id" />
        <result property="address"                  column="address" />
        <result property="birthDate"                column="birth_date" />
        <result property="gender"                   column="gender" />
        <result property="totalKm"                  column="total_km" />
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="memberId">
        insert into member_tb (crew_id, user_id, role_id)
        values ( #{crewId}, #{userId}, 4)
    </insert>

    <select id="findAllMembersBySearchOption"
            parameterType="com.korit.running_back_s2.domain.member.MemberSearchOption"
            resultMap="MemberMap">
        select
            cm.member_id,
            cm.user_id as cm_user_id,
            cm.role_id,
            u.full_name,
            u.nickname,
            u.picture as picture
        from
            member_tb cm
            left outer join user_tb u on (u.user_id = cm.user_id)
        where
            cm.crew_id = #{crewId}
            <if test="searchText != null and searchText != ''">
                AND (
                u.full_name LIKE CONCAT('%', #{searchText}, '%')
                OR u.nickname LIKE CONCAT('%', #{searchText}, '%')
                )
            </if>
        order by
            cm.role_id asc,
            cm.member_id asc
        limit #{startIndex}, #{size}
    </select>

    <select id="countMembersBySearchOption"
            parameterType="com.korit.running_back_s2.domain.member.MemberSearchOption"
            resultType="int">
        select
            COUNT(*)
        from
            member_tb cm
            left outer join user_tb u on (u.user_id = cm.user_id)
        where
            cm.crew_id = #{crewId}
            <if test="searchText != null and searchText != ''">
                AND (
                u.full_name LIKE CONCAT('%', #{searchText}, '%')
                OR u.nickname LIKE CONCAT('%', #{searchText}, '%')
                )
            </if>
    </select>
    <select id="findById" resultMap="MemberMap">
        select
            cm.member_id,
            cm.crew_id,
            cm.user_id as cm_user_id,
            cm.role_id,
            u.user_id,
            u.nickname,
            u.full_name,
            u.picture as picture,
            u.gender,
            u.birth_date,
            u.total_km
        from
            member_tb cm
            left outer join user_tb u ON u.user_id = cm.user_id
        where
            cm.member_id = #{memberId}
    </select>
    <select id="findMemberIdByUserId" resultType="java.lang.Integer">
        select
            member_id
        from
            member_tb
        where
            crew_id = #{crewId} and user_id = #{userId}
    </select>


    <select id="existsFind" resultType="java.lang.Boolean">
        select exists (
                select
                    1
                from
                    member_tb
                where
                    crew_id = #{crewId}
                    and user_id = #{userId}
                )  as exist
    </select>

    <select id="countMember" resultType="java.lang.Integer">
        select
            count(*)
        from
            member_tb
        where
            crew_id = #{crewId}
    </select>

    <update id="updateRole">
        update member_tb
        set
            role_id = #{roleId}
        where
            member_id = #{memberId}
    </update>

    <delete id="deleteMember">
        delete from member_tb
        where member_id = #{memberId}
    </delete>

    <insert id="insertLeaderRole">
        insert into member_tb (crew_id, user_id, role_id)
        values (#{crewId}, #{userId}, 1)
    </insert>

    <select id="getRoleId" parameterType="int">
        select
            role_id
        from
            member_tb
        where
            crew_id = #{crewId} and user_id = #{userId}
    </select>
</mapper>
